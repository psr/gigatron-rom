'Keeping time using the
'59.98 Hz frame counter

const TICKS = 60
const SECSX = &h60A0
const SECSY = &h61A0
const MINSX = &h62A0
const MINSY = &h63A0
const HOURX = &h64A0
const HOURY = &h65A0

const CENTERX = 80
const CENTERY = 59

const SECSLEN = 45
const MINSLEN = 37
const HOURLEN = 29

const BKCOLOUR = &h30
const DIALCOLOUR = &h10
const DIALRADIUS = 43

'Seconds
def byte(SECSX, x, -90.0, 270.0, TICKS) = cos(x)*SECSLEN + CENTERX
def byte(SECSY, y, -90.0, 270.0, TICKS) = sin(y)*SECSLEN + CENTERY

'Minutes
def byte(MINSX, x, -90.0, 270.0, TICKS) = cos(x)*MINSLEN + CENTERX
def byte(MINSY, y, -90.0, 270.0, TICKS) = sin(y)*MINSLEN + CENTERY

'Hours
def byte(HOURX, x, -90.0, 270.0, TICKS) = cos(x)*HOURLEN + CENTERX
def byte(HOURY, y, -90.0, 270.0, TICKS) = sin(y)*HOURLEN + CENTERY

' disable video, (except last line so that we don't lose sync), for fast cls and dial draw
poke &h01F9, 238
poke 162,BKCOLOUR
cls
poke &h01F9, 0  'enable video

input "Enter Time ", H,"H:";2;, M,"M:";2;, S,"S:";2;
B=peek(14)
at 2,0 : print "                          ";

if H=0
    H=12
else
    H=H%13
endif
M=M%60
S=S%60

HH=H : MM=M : SS=S

Hm12=H%12
Md12=M/12 : MMd12=Md12

poke &h01F9, 238  'disable video
gosub drawDial
gosub drawClock
poke &h01F9, 0  'enable video

20 T=S*60 : V=3599 : goto 50
30 if T>=V then T=T-V : M=M+1
40 if M>59 then M=M-60 : H=H+1
50 if H>12 then H=H-12
60 S=T/60 : if S<>SS then gosub drawClock : SS=S
70 A=B : B=peek(14) : A=B-A
80 if A<0 then A=A+256
90 T=T+A : goto 30 'use T=T+2500 for debugging

drawClock:
    gosub drawDigits
    gosub drawSeconds
    gosub drawMinutes
    gosub drawHours
return

drawDigits:
    poke 162,&h00
    poke 163,&h0C : at 57,82 : print H/10;H%10;":";M/10;M%10;":";S/10;S%10;
    poke 162,DIALCOLOUR
return

drawSeconds:
    gosub eraseSecondHand
    i=SS : gosub drawTicks
    gosub drawSecondHand
return

drawMinutes:
    if M<>MM 
        gosub eraseMinuteHand
        MM=M : Md12=M/12
        if Md12<>MMd12
            gosub eraseHourHand
            MMd12=Md12
        endif
    endif
    gosub drawMinuteHand
return

drawHours:
    if H<>HH
        HH=H : Hm12=H%12
    endif
    Hx5=(Hm12 LSL 2)+Hm12
    gosub drawHourHand
return

drawTicks:
    x = peek(SECSX + i)
    y = peek(SECSY + i) + 8
    poke (y LSL 8) + x, &h3F
return


drawDial:
    poke 163, DIALCOLOUR
    circlef CENTERX, CENTERY, DIALRADIUS
    
    ox=CENTERX : oy=CENTERY
    cr=DIALRADIUS + 1 : cc=&h00 : gosub jitterCircle
    cr=DIALRADIUS + 3 : cc=&h00 : gosub jitterCircle
    cr=DIALRADIUS + 5 : cc=&h01 : gosub jitterCircle
    cr=DIALRADIUS + 9 : cc=&h03 : gosub jitterCircle
    cr=DIALRADIUS + 7 : cc=&h02 : gosub jitterCircle
    
    for i=0 to TICKS-1
        gosub drawTicks
    next i
return

eraseSecondHand:
    poke 163,DIALCOLOUR : line CENTERX,CENTERY, peek(SECSX + SS),peek(SECSY + SS)
return
    
drawSecondHand:
    poke 163,&h3F : line CENTERX,CENTERY, peek(SECSX + S),peek(SECSY + S)
return

eraseMinuteHand:
    poke 163,DIALCOLOUR : line CENTERX,CENTERY, peek(MINSX + MM),peek(MINSY + MM)
return

drawMinuteHand:
    poke 163,&h2A : line CENTERX,CENTERY, peek(MINSX + M),peek(MINSY + M)
return

eraseHourHand:
    poke 163,DIALCOLOUR: line CENTERX,CENTERY, peek(HOURX + Hx5 + MMd12),peek(HOURY + Hx5 + MMd12)
return

drawHourHand:
    poke 163,&h15 : line CENTERX,CENTERY, peek(HOURX + Hx5 + Md12),peek(HOURY + Hx5 + Md12)
return

jitterCircle:
    for oxx=ox-1 to ox+1
        for oyy=oy-1 to oy+1
            poke 163,cc
            circle oxx, oyy, cr
        next oyy
    next oxx
return