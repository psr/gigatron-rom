_runtimeStart_ &h26FF

cls

y=0 : x=y : i=x : j=i : a=j : pitch=a : yy=pitch
color1 = &h3F : color2 = &h03 : horizonY = 32

dim c1(4)=0 : c1(0)=&h3F : c1(1)=&h2A : c1(2)=&h15 : c1(3)=&h00
dim c2(4)=0 : c2(0)=&h03 : c2(1)=&h02 : c2(2)=&h01 : c2(3)=&h00

fade=0 : cIndex=fade : decay = 54

' Draw tiles in perspective in screen memory
for y=119 to horizonY step -1
    color1 = c1(cIndex) : color2 = c2(cIndex)
    fade = fade + 1
    if fade &= decay then cIndex = cIndex + 1 : fade = 0 : decay = decay LSR 1

    yy = y
    gosub calcPitch

    if ((400 / (y-horizonY+40)) AND 1) &&= 0
        j = color1 XOR color2
    else
        j = 0
    endif

    i = 80 % pitch
    a = ((y + 8) LSL 8)

    for x=0 to pitch + 159
        if i &&= 0
            i = pitch - 1
        else
            i = i - 1
        endif

        if i+i &&>= pitch
            p = color1 XOR j
        else
            p = color2 XOR j
        endif

        poke a+x,p 
    next x
    poke &h01F9, y+y
next y
poke &h01F9, 0

x=0 : v=8
loop:   i = x AND 255
        j = 0
        q = &h0100 + 240
        yy = horizonY
        gosub calcPitch
        for y=0 to pitch
            j = j + i
        next y
        
        i = i + i
        p = &h0101 + horizonY + horizonY            

        wait 1
        repeat
            poke p, j LSR 8
            j = i + (j AND 255)
        p = p + 4 : until p &>= q
        
        gosub peek(17)
        
        x = x + v
goto loop

254: v = v + 1 : if v &&> 32 then v = 32
     return
253: v = v - 1 : if v &&< -32 then v = -32
     return
191: v = 0 : return
127: v = 0 : return

calcPitch: pitch = yy + (96 - 120 + 1)
           pitch = (pitch + 1) AND &hfffe
           return